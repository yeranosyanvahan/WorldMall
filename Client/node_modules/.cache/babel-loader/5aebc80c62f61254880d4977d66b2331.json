{"ast":null,"code":"var _jsxFileName = \"/home/vahan/Desktop/WorldMall/Client/src/lib/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { API } from '../lib/index.js';\nimport { useHistory, withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SearchBar() {\n  _s();\n\n  let history = useHistory();\n  let inputref = useRef();\n  const [searchresult, Setsearchresult] = useState([]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputref,\n        type: \"text\",\n        placeholder: \"Search...\",\n        name: \"search\",\n        id: \"search\",\n        onChange: ({\n          target: {\n            value: search\n          }\n        }) => {\n          API(\"Autocomplete\", search).then(Result => Setsearchresult(Result[\"Autocomplete\"]));\n        },\n        onKeyDown: event => {\n          if (event.key === 'Enter') {\n            history.push(`/search/${event.target.value}`);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          history.push(`/search/${inputref.current.value}`);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 81\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: searchresult.map(sample => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [sample['category'], \" \"]\n          }, Math.random(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 45\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(SearchBar, \"yTiVov3hIK/OLpFekSrT7aa0b/k=\", false, function () {\n  return [useHistory];\n});\n\n_c = SearchBar;\nexport default _c2 = withRouter(SearchBar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchBar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/vahan/Desktop/WorldMall/Client/src/lib/SearchBar.js"],"names":["React","useState","useRef","API","useHistory","withRouter","SearchBar","history","inputref","searchresult","Setsearchresult","target","value","search","then","Result","event","key","push","current","map","sample","Math","random"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,MAAvB,QAAoC,OAApC;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,SAASC,UAAT,EAAoBC,UAApB,QAAsC,kBAAtC;;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACrB,MAAIC,OAAO,GAAGH,UAAU,EAAxB;AACA,MAAII,QAAQ,GAAEN,MAAM,EAApB;AACA,QAAM,CAACO,YAAD,EAAcC,eAAd,IAAiCT,QAAQ,CAAC,EAAD,CAA/C;AACA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAO,QAAA,GAAG,EAAEO,QAAZ;AAAsB,QAAA,IAAI,EAAC,MAA3B;AAAkC,QAAA,WAAW,EAAC,WAA9C;AAA0D,QAAA,IAAI,EAAC,QAA/D;AAAwE,QAAA,EAAE,EAAC,QAA3E;AACE,QAAA,QAAQ,EAAE,CAAC;AAACG,UAAAA,MAAM,EAAC;AAACC,YAAAA,KAAK,EAACC;AAAP;AAAR,SAAD,KAA2B;AAACV,UAAAA,GAAG,CAAC,cAAD,EAAgBU,MAAhB,CAAH,CAA2BC,IAA3B,CAAgCC,MAAM,IAAEL,eAAe,CAACK,MAAM,CAAC,cAAD,CAAP,CAAvD;AAAiF,SADzH;AAEE,QAAA,SAAS,EAAGC,KAAD,IAAW;AAAE,cAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AAACV,YAAAA,OAAO,CAACW,IAAR,CAAc,WAAUF,KAAK,CAACL,MAAN,CAAaC,KAAM,EAA3C;AAA+C;AAAC;AAFtG;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAQ,QAAA,OAAO,EAAE,MAAI;AAACL,UAAAA,OAAO,CAACW,IAAR,CAAc,WAAUV,QAAQ,CAACW,OAAT,CAAiBP,KAAM,EAA/C;AAAkD,SAAxE;AAAA,+BAA0E;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAA1E;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAA,kBACKH,YAAY,CAACW,GAAb,CAAiBC,MAAM,IAAE;AAAC,8BAAO;AAAA,uBAAyBA,MAAM,CAAC,UAAD,CAA/B;AAAA,aAASC,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA,kBAAP;AAA0D,SAApF;AADL;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcG;;GAlBMjB,S;UACKF,U;;;KADLE,S;AAoBT,qBAAeD,UAAU,CAACC,SAAD,CAAzB","sourcesContent":["import React,{useState,useRef} from 'react';\r\nimport {API} from '../lib/index.js'\r\nimport { useHistory,withRouter } from \"react-router-dom\";\r\n\r\nfunction SearchBar() {\r\nlet history = useHistory();\r\nlet inputref= useRef()\r\nconst [searchresult,Setsearchresult] = useState([])\r\nreturn (\r\n  <>\r\n    <div className='search'>\r\n      <input ref={inputref} type=\"text\" placeholder=\"Search...\" name=\"search\" id=\"search\"\r\n        onChange={({target:{value:search}})=>{API(\"Autocomplete\",search).then(Result=>Setsearchresult(Result[\"Autocomplete\"]))}}\r\n        onKeyDown={(event) => { if (event.key === 'Enter') {history.push(`/search/${event.target.value}`);}}}\r\n        />\r\n\r\n      <button onClick={()=>{history.push(`/search/${inputref.current.value}`)}}><i className=\"fa fa-search\"></i></button>\r\n      <ul>\r\n          {searchresult.map(sample=>{return <li key={Math.random()}>{sample['category']} </li>})}\r\n      </ul>\r\n    </div>\r\n  </>\r\n);}\r\n\r\nexport default withRouter(SearchBar);\r\n"]},"metadata":{},"sourceType":"module"}