{"ast":null,"code":"import * as dgraph from 'dgraph-js-http';\nlet Calls = {\n  Autocomplete: call => `{Autocomplete(func:match(category,\"${call}\",4)){expand(Category)}}`,\n  Search: call => `{Search(func: alloftext(product,\"${call}\")){product stores {store}@facets ~products {property}@facets}}`\n};\n\nconst Dgraph = require(\"dgraph-js-http\");\n\nconst clientStub = new Dgraph.DgraphClientStub(\"http://localhost:8080\", false);\nconst dgraphClient = new Dgraph.DgraphClient(clientStub);\n\nasync function API(type, call = '') {\n  const query = Calls[type](call);\n  let {\n    data\n  } = await dgraphClient.newTxn().query(query);\n  return data;\n}\n\n_c = API;\nexport default API;\n\nvar _c;\n\n$RefreshReg$(_c, \"API\");","map":{"version":3,"sources":["/home/vahan/Desktop/WorldMall/Client/src/lib/API.js"],"names":["dgraph","Calls","Autocomplete","call","Search","Dgraph","require","clientStub","DgraphClientStub","dgraphClient","DgraphClient","API","type","query","data","newTxn"],"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,gBAAxB;AAEA,IAAIC,KAAK,GAAC;AAACC,EAAAA,YAAY,EAACC,IAAI,IAAG,sCAAqCA,IAAK,0BAA/D;AAAyFC,EAAAA,MAAM,EAACD,IAAI,IAAG,oCAAmCA,IAAK;AAA/I,CAAV;;AACA,MAAME,MAAM,GAAGC,OAAO,CAAC,gBAAD,CAAtB;;AACA,MAAMC,UAAU,GAAG,IAAIF,MAAM,CAACG,gBAAX,CAA4B,uBAA5B,EAAqD,KAArD,CAAnB;AACA,MAAMC,YAAY,GAAG,IAAIJ,MAAM,CAACK,YAAX,CAAwBH,UAAxB,CAArB;;AAEA,eAAeI,GAAf,CAAmBC,IAAnB,EAAwBT,IAAI,GAAC,EAA7B,EAAgC;AAC9B,QAAMU,KAAK,GAAGZ,KAAK,CAACW,IAAD,CAAL,CAAYT,IAAZ,CAAd;AACA,MAAI;AAACW,IAAAA;AAAD,MAAS,MAAML,YAAY,CAACM,MAAb,GAAsBF,KAAtB,CAA4BA,KAA5B,CAAnB;AACA,SAAOC,IAAP;AACD;;KAJcH,G;AAMf,eAAeA,GAAf","sourcesContent":["import * as dgraph from 'dgraph-js-http'\r\n\r\nlet Calls={Autocomplete:call=>`{Autocomplete(func:match(category,\"${call}\",4)){expand(Category)}}`,Search:call=>`{Search(func: alloftext(product,\"${call}\")){product stores {store}@facets ~products {property}@facets}}`}\r\nconst Dgraph = require(\"dgraph-js-http\");\r\nconst clientStub = new Dgraph.DgraphClientStub(\"http://localhost:8080\", false);\r\nconst dgraphClient = new Dgraph.DgraphClient(clientStub);\r\n\r\nasync function API(type,call=''){\r\n  const query = Calls[type](call)\r\n  let {data} = await dgraphClient.newTxn().query(query);\r\n  return data\r\n}\r\n\r\nexport default API\r\n"]},"metadata":{},"sourceType":"module"}